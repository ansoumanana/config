server:
    port: 8081
endpoints:
    shutdown:
        enabled: true
info:
    app:
        Description: Bank system  Accounts Application
        name: Accounts Microservice
        version: 1.0.0
spring:
    datasource:
        password: '{cipher}c6f5efdeb26b003bfdb8608d9db613d5cfa2d870df3ceeaec64c77a64ecb992f'
        url: jdbc:mysql://localhost/bankaccounts?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
        username: '{cipher}c6f5efdeb26b003bfdb8608d9db613d5cfa2d870df3ceeaec64c77a64ecb992f'
    jpa:
        databasePlatform: org.hibernate.dialect.MySQL5InnoDBDialect
        hibernate:
            ddl-auto: update
        show-sql: true
    #rabbitmq:
        #host: rabbitmq
        #password: '{cipher}87dd3fd18f40f34aae66e2a03004cc5b67d9f36c1a8e8aee7beeb943caa238e3'
        #port: 5672
        #username: guest
    sleuth:
        sampler:
            percentage: 1
    zipkin:
        baseUrl: http://localhost:9411/
        #rabbitmq:
            #queue: zipkin
        #sender:
           # type: rabbit
management:
    endpoint:
        shutdown:
            enabled: true
    auditevents:
        enabled: true
    endpoints:
        web:
            exposure:
                include: '*'

eureka :
    instance:
        appname: account
        prefer-ip-address: true
    client:
        registerWithEureka: true
        fetch-registry: true
        serviceUrl:
            defaultZone: http://eurekaserver:8090/eureka/

resilience4j:
    circuitbreaker:
        configs:
            default:
                registerHealthIndicator: true
        instances:
            detailsForCustomerSupportApp:
                failureRateThreshold: 50
                minimumNumberOfCalls: 5
                permittedNumberOfCallsInHalfOpenState: 2
                waitDurationInOpenState: 30000
    ratelimiter:
        configs:
            default:
                registerHealthIndicator: true
        instances:
            sayHello:
                limitForPeriod: 1
                limitRefreshPeriod: 5000
                timeoutDuration: 5000
            rateLimiterForCustomerDetails:
                limitForPeriod: 1
                limitRefreshPeriod: 5000
                timeoutDuration: 5000
    retry:
        configs:
            default:
                registerHealthIndicator: true
        instances:
            retryForCustomerDetails:
                maxRetryAttempts: 3
                waitDuration: 2000

springdoc:
    show-actuator: true
    swagger-ui:
        groups-order: DESC
        disable-swagger-default-url: true